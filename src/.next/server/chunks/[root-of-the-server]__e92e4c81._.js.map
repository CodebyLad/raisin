{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/hedgehog/raisin/src/app/api/openai/token/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nconst apiKey = process.env.OPENAI_API_KEY;\n\nexport async function GET(req: NextRequest) {\n  try {\n    // Call OpenAI to create ephemeral token\n    const res = await fetch(\"https://api.openai.com/v1/realtime/sessions\", {\n      method: \"POST\",\n      headers: {\n        \"Authorization\": `Bearer ${process.env.OPENAI_API_KEY}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        model: \"gpt-4o-realtime-preview-2024-12-17\",\n      }),\n    });\n\n    const data = await res.json();\n\n    return NextResponse.json({ value: data.client_secret.value });\n  } catch (err) {\n    console.error(err);\n    return NextResponse.json({ value: null }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;AAElC,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,wCAAwC;QACxC,MAAM,MAAM,MAAM,MAAM,+CAA+C;YACrE,QAAQ;YACR,SAAS;gBACP,iBAAiB,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,cAAc,EAAE;gBACvD,gBAAgB;YAClB;YACA,MAAM,KAAK,SAAS,CAAC;gBACnB,OAAO;YACT;QACF;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,OAAO,0JAAY,CAAC,IAAI,CAAC;YAAE,OAAO,KAAK,aAAa,CAAC,KAAK;QAAC;IAC7D,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;QACd,OAAO,0JAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IAC1D;AACF","debugId":null}}]
}